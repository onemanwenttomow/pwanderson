{
  "entry": "server-bundle.js",
  "files": {
    "6f492ff93027401484d8.js": "exports.ids = [1];\nexports.modules = {\n\n/***/ 22:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(24);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to SSR context\nvar add = __webpack_require__(9).default\nmodule.exports.__inject__ = function (context) {\n  add(\"2e93c916\", content, true, context)\n};\n\n/***/ }),\n\n/***/ 23:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_a5a0cb44_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(22);\n/* harmony import */ var _node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_a5a0cb44_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_a5a0cb44_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_a5a0cb44_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_a5a0cb44_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_id_a5a0cb44_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); \n\n/***/ }),\n\n/***/ 24:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(8)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 25:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./client/pages/index.vue?vue&type=template&id=a5a0cb44&scoped=true&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h1',[_vm._ssrNode(\"Coming Soon... 🦆\")])}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./client/pages/index.vue?vue&type=template&id=a5a0cb44&scoped=true&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib??vue-loader-options!./client/pages/index.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n/* harmony default export */ var pagesvue_type_script_lang_js_ = ({\n  head() {\n    return {\n      title: \"Peter Anderson - Full Stack Developer Berlin 🤖\",\n      meta: [{\n        hid: \"🤘\",\n        name: \"Peter Anderson - Full Stack Developer Berlin 🤖\",\n        content: `🤖`\n      }]\n    };\n  }\n\n});\n// CONCATENATED MODULE: ./client/pages/index.vue?vue&type=script&lang=js&\n /* harmony default export */ var client_pagesvue_type_script_lang_js_ = (pagesvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./client/pages/index.vue\n\n\n\nfunction injectStyles (context) {\n  \n  var style0 = __webpack_require__(23)\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\n\nvar component = Object(componentNormalizer[\"a\" /* default */])(\n  client_pagesvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  \"a5a0cb44\",\n  \"63d560b4\"\n  \n)\n\ncomponent.options.__file = \"index.vue\"\n/* harmony default export */ var pages = __webpack_exports__[\"default\"] = (component.exports);\n\n/***/ })\n\n};;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNmY0OTJmZjkzMDI3NDAxNDg0ZDguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvcGFnZXMvaW5kZXgudnVlPzM2MTQiLCJ3ZWJwYWNrOi8vLy4vY2xpZW50L3BhZ2VzL2luZGV4LnZ1ZT82MTgyIiwid2VicGFjazovLy8uL2NsaWVudC9wYWdlcy9pbmRleC52dWU/OWFiNiIsIndlYnBhY2s6Ly8vLi9jbGllbnQvcGFnZXMvaW5kZXgudnVlPzQ2M2YiLCJ3ZWJwYWNrOi8vLy4vY2xpZW50L3BhZ2VzL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly8vLi9jbGllbnQvcGFnZXMvaW5kZXgudnVlPzAyYTgiLCJ3ZWJwYWNrOi8vLy4vY2xpZW50L3BhZ2VzL2luZGV4LnZ1ZT83OGE3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0zLW9uZU9mLTEtMSEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS0zLW9uZU9mLTEtMiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWE1YTBjYjQ0JnNjb3BlZD10cnVlJmxhbmc9Y3NzJlwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgQ1NTIHRvIFNTUiBjb250ZXh0XG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzU2VydmVyLmpzXCIpLmRlZmF1bHRcbm1vZHVsZS5leHBvcnRzLl9faW5qZWN0X18gPSBmdW5jdGlvbiAoY29udGV4dCkge1xuICBhZGQoXCIyZTkzYzkxNlwiLCBjb250ZW50LCB0cnVlLCBjb250ZXh0KVxufTsiLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTMtb25lT2YtMS0xIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTMtb25lT2YtMS0yIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9YTVhMGNiNDQmc2NvcGVkPXRydWUmbGFuZz1jc3MmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMy1vbmVPZi0xLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tMy1vbmVPZi0xLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1hNWEwY2I0NCZzY29wZWQ9dHJ1ZSZsYW5nPWNzcyZcIiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2gxJyxbX3ZtLl9zc3JOb2RlKFwiQ29taW5nIFNvb24uLi4g8J+mhlwiKV0pfVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCIvL1xuLy9cbi8vXG4vL1xuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGhlYWQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdGl0bGU6IFwiUGV0ZXIgQW5kZXJzb24gLSBGdWxsIFN0YWNrIERldmVsb3BlciBCZXJsaW4g8J+kllwiLFxyXG4gICAgICAgICAgICBtZXRhOiBbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgaGlkOiBcIvCfpJhcIixcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlBldGVyIEFuZGVyc29uIC0gRnVsbCBTdGFjayBEZXZlbG9wZXIgQmVybGluIPCfpJZcIixcclxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBg8J+klmBcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn07XHJcbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0wIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMCEuLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWE1YTBjYjQ0JnNjb3BlZD10cnVlJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5mdW5jdGlvbiBpbmplY3RTdHlsZXMgKGNvbnRleHQpIHtcbiAgXG4gIHZhciBzdHlsZTAgPSByZXF1aXJlKFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1hNWEwY2I0NCZzY29wZWQ9dHJ1ZSZsYW5nPWNzcyZcIilcbmlmIChzdHlsZTAuX19pbmplY3RfXykgc3R5bGUwLl9faW5qZWN0X18oY29udGV4dClcblxufVxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBpbmplY3RTdHlsZXMsXG4gIFwiYTVhMGNiNDRcIixcbiAgXCI2M2Q1NjBiNFwiXG4gIFxuKVxuXG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcImluZGV4LnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUNWQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7O0FDUEE7QUFDQTtBQUNBOzs7OztBQ0ZBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUhBO0FBSEE7QUFVQTtBQUNBO0FBYkE7O0FDTEE7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QSIsInNvdXJjZVJvb3QiOiIifQ==",
    "server-bundle.js": "module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded chunks\n/******/ \t// \"0\" means \"already loaded\"\n/******/ \tvar installedChunks = {\n/******/ \t\t0: 0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId) {\n/******/ \t\tvar promises = [];\n/******/\n/******/\n/******/ \t\t// require() chunk loading for javascript\n/******/\n/******/ \t\t// \"0\" is the signal for \"already loaded\"\n/******/ \t\tif(installedChunks[chunkId] !== 0) {\n/******/ \t\t\tvar chunk = require(\"./\" + {\"1\":\"6f492ff93027401484d8\"}[chunkId] + \".js\");\n/******/ \t\t\tvar moreModules = chunk.modules, chunkIds = chunk.ids;\n/******/ \t\t\tfor(var moduleId in moreModules) {\n/******/ \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t\t}\n/******/ \t\t\tfor(var i = 0; i < chunkIds.length; i++)\n/******/ \t\t\t\tinstalledChunks[chunkIds[i]] = 0;\n/******/ \t\t}\n/******/ \t\treturn Promise.all(promises);\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dev/_nuxt/\";\n/******/\n/******/ \t// uncaught error handler for webpack runtime\n/******/ \t__webpack_require__.oe = function(err) {\n/******/ \t\tprocess.nextTick(function() {\n/******/ \t\t\tthrow err; // catch this error by using import().catch()\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 14);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"vue\");\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(17);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to SSR context\nvar add = __webpack_require__(9).default\nmodule.exports.__inject__ = function (context) {\n  add(\"fd547dac\", content, true, context)\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_2_0_node_modules_vue_loader_lib_index_js_vue_loader_options_default_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_2_0_node_modules_vue_loader_lib_index_js_vue_loader_options_default_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_babel_loader_lib_index_js_ref_2_0_node_modules_vue_loader_lib_index_js_vue_loader_options_default_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_2_0_node_modules_vue_loader_lib_index_js_vue_loader_options_default_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); \n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n//\n//\n//\n//\n//\n//\n//\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(19);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to SSR context\nvar add = __webpack_require__(9).default\nmodule.exports.__inject__ = function (context) {\n  add(\"55464faa\", content, true, context)\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"vue-router\");\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./client/layouts/default.vue?vue&type=template&id=7c2b9ecf&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('nuxt')],1)}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./client/layouts/default.vue?vue&type=template&id=7c2b9ecf&\n/* concated harmony reexport render */__webpack_require__.d(__webpack_exports__, \"a\", function() { return render; });\n/* concated harmony reexport staticRenderFns */__webpack_require__.d(__webpack_exports__, \"b\", function() { return staticRenderFns; });\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/listToStyles.js\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nfunction listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/addStylesServer.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return addStylesServer; });\n\n\nfunction addStylesServer (parentId, list, isProduction, context) {\n  if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n    context = __VUE_SSR_CONTEXT__\n  }\n  if (context) {\n    if (!context.hasOwnProperty('styles')) {\n      Object.defineProperty(context, 'styles', {\n        enumerable: true,\n        get: function() {\n          return renderStyles(context._styles)\n        }\n      })\n      // expose renderStyles for vue-server-renderer (vuejs/#6353)\n      context._renderStyles = renderStyles\n    }\n\n    var styles = context._styles || (context._styles = {})\n    list = listToStyles(parentId, list)\n    if (isProduction) {\n      addStyleProd(styles, list)\n    } else {\n      addStyleDev(styles, list)\n    }\n  }\n}\n\n// In production, render as few style tags as possible.\n// (mostly because IE9 has a limit on number of style tags)\nfunction addStyleProd (styles, list) {\n  for (var i = 0; i < list.length; i++) {\n    var parts = list[i].parts\n    for (var j = 0; j < parts.length; j++) {\n      var part = parts[j]\n      // group style tags by media types.\n      var id = part.media || 'default'\n      var style = styles[id]\n      if (style) {\n        if (style.ids.indexOf(part.id) < 0) {\n          style.ids.push(part.id)\n          style.css += '\\n' + part.css\n        }\n      } else {\n        styles[id] = {\n          ids: [part.id],\n          css: part.css,\n          media: part.media\n        }\n      }\n    }\n  }\n}\n\n// In dev we use individual style tag for each module for hot-reload\n// and source maps.\nfunction addStyleDev (styles, list) {\n  for (var i = 0; i < list.length; i++) {\n    var parts = list[i].parts\n    for (var j = 0; j < parts.length; j++) {\n      var part = parts[j]\n      styles[part.id] = {\n        ids: [part.id],\n        css: part.css,\n        media: part.media\n      }\n    }\n  }\n}\n\nfunction renderStyles (styles) {\n  var css = ''\n  for (var key in styles) {\n    var style = styles[key]\n    css += '<style data-vue-ssr-id=\"' + style.ids.join(' ') + '\"' +\n        (style.media ? ( ' media=\"' + style.media + '\"' ) : '') + '>' +\n        style.css + '</style>'\n  }\n  return css\n}\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"querystring\");\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"vue-meta\");\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"vue-no-ssr\");\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var _default_vue_vue_type_template_id_7c2b9ecf___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);\n/* harmony import */ var _default_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);\n/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1);\n\n\n\nfunction injectStyles (context) {\n  \n  var style0 = __webpack_require__(18)\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ \"a\"])(\n  _default_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _default_vue_vue_type_template_id_7c2b9ecf___WEBPACK_IMPORTED_MODULE_0__[/* render */ \"a\"],\n  _default_vue_vue_type_template_id_7c2b9ecf___WEBPACK_IMPORTED_MODULE_0__[/* staticRenderFns */ \"b\"],\n  false,\n  injectStyles,\n  null,\n  \"0ba1be28\"\n  \n)\n\ncomponent.options.__file = \"default.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(21);\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"lodash/omit\");\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_nuxt_loading_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\n/* harmony import */ var _node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_nuxt_loading_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_nuxt_loading_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_nuxt_loading_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_nuxt_loading_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_nuxt_loading_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); \n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(8)(false);\n// imports\n\n\n// module\nexports.push([module.i, \".nuxt-progress{position:fixed;top:0;left:0;right:0;height:2px;width:0;opacity:1;transition:width .1s,opacity .4s;background-color:#000;z-index:999999}.nuxt-progress.nuxt-progress-notransition{transition:none}.nuxt-progress-failed{background-color:red}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_default_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);\n/* harmony import */ var _node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_default_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_default_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_default_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_default_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_vue_style_loader_index_js_node_modules_css_loader_index_js_ref_3_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_3_oneOf_1_2_node_modules_vue_loader_lib_index_js_vue_loader_options_default_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); \n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(8)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"debug\");\n\n/***/ }),\n/* 21 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: external \"querystring\"\nvar external_querystring_ = __webpack_require__(10);\n\n// EXTERNAL MODULE: external \"vue\"\nvar external_vue_ = __webpack_require__(0);\nvar external_vue_default = /*#__PURE__*/__webpack_require__.n(external_vue_);\n\n// EXTERNAL MODULE: external \"lodash/omit\"\nvar omit_ = __webpack_require__(15);\n\n// CONCATENATED MODULE: ./.nuxt/middleware.js\n/* harmony default export */ var middleware = ({});\n// CONCATENATED MODULE: ./.nuxt/utils.js\n\n\nconst noopData = () => ({}); // window.{{globals.loadedCallback}} hook\n// Useful for jsdom testing or plugins (https://github.com/tmpvar/jsdom#dealing-with-asynchronous-script-loading)\n\n\nif (false) {}\n\nfunction empty() {}\nfunction globalHandleError(error) {\n  if (external_vue_default.a.config.errorHandler) {\n    external_vue_default.a.config.errorHandler(error);\n  }\n}\nfunction interopDefault(promise) {\n  return promise.then(m => m.default || m);\n}\nfunction applyAsyncData(Component, asyncData) {\n  const ComponentData = Component.options.data || noopData; // Prevent calling this method for each request on SSR context\n\n  if (!asyncData && Component.options.hasAsyncData) {\n    return;\n  }\n\n  Component.options.hasAsyncData = true;\n\n  Component.options.data = function () {\n    const data = ComponentData.call(this);\n\n    if (this.$ssrContext) {\n      asyncData = this.$ssrContext.asyncData[Component.cid];\n    }\n\n    return { ...data,\n      ...asyncData\n    };\n  };\n\n  if (Component._Ctor && Component._Ctor.options) {\n    Component._Ctor.options.data = Component.options.data;\n  }\n}\nfunction sanitizeComponent(Component) {\n  // If Component already sanitized\n  if (Component.options && Component._Ctor === Component) {\n    return Component;\n  }\n\n  if (!Component.options) {\n    Component = external_vue_default.a.extend(Component); // fix issue #6\n\n    Component._Ctor = Component;\n  } else {\n    Component._Ctor = Component;\n    Component.extendOptions = Component.options;\n  } // For debugging purpose\n\n\n  if (!Component.options.name && Component.options.__file) {\n    Component.options.name = Component.options.__file;\n  }\n\n  return Component;\n}\nfunction getMatchedComponents(route, matches = false) {\n  return Array.prototype.concat.apply([], route.matched.map((m, index) => {\n    return Object.keys(m.components).map(key => {\n      matches && matches.push(index);\n      return m.components[key];\n    });\n  }));\n}\nfunction getMatchedComponentsInstances(route, matches = false) {\n  return Array.prototype.concat.apply([], route.matched.map((m, index) => {\n    return Object.keys(m.instances).map(key => {\n      matches && matches.push(index);\n      return m.instances[key];\n    });\n  }));\n}\nfunction flatMapComponents(route, fn) {\n  return Array.prototype.concat.apply([], route.matched.map((m, index) => {\n    return Object.keys(m.components).reduce((promises, key) => {\n      if (m.components[key]) {\n        promises.push(fn(m.components[key], m.instances[key], m, key, index));\n      } else {\n        delete m.components[key];\n      }\n\n      return promises;\n    }, []);\n  }));\n}\nfunction resolveRouteComponents(route) {\n  return Promise.all(flatMapComponents(route, async (Component, _, match, key) => {\n    // If component is a function, resolve it\n    if (typeof Component === 'function' && !Component.options) {\n      Component = await Component();\n    }\n\n    match.components[key] = sanitizeComponent(Component);\n    return match.components[key];\n  }));\n}\nasync function getRouteData(route) {\n  // Make sure the components are resolved (code-splitting)\n  await resolveRouteComponents(route); // Send back a copy of route with meta based on Component definition\n\n  return { ...route,\n    meta: getMatchedComponents(route).map(Component => {\n      return Component.options.meta || {};\n    })\n  };\n}\nasync function setContext(app, context) {\n  // If context not defined, create it\n  if (!app.context) {\n    app.context = {\n      isStatic: false,\n      isDev: false,\n      isHMR: false,\n      app,\n      payload: context.payload,\n      error: context.error,\n      base: '/',\n      env: {} // Only set once\n\n    };\n    if (context.req) app.context.req = context.req;\n    if (context.res) app.context.res = context.res;\n\n    app.context.redirect = (status, path, query) => {\n      if (!status) {\n        return;\n      }\n\n      app.context._redirected = true; // if only 1 or 2 arguments: redirect('/') or redirect('/', { foo: 'bar' })\n\n      let pathType = typeof path;\n\n      if (typeof status !== 'number' && (pathType === 'undefined' || pathType === 'object')) {\n        query = path || {};\n        path = status;\n        pathType = typeof path;\n        status = 302;\n      }\n\n      if (pathType === 'object') {\n        path = app.router.resolve(path).href;\n      } // \"/absolute/route\", \"./relative/route\" or \"../relative/route\"\n\n\n      if (/(^[.]{1,2}\\/)|(^\\/(?!\\/))/.test(path)) {\n        app.context.next({\n          path: path,\n          query: query,\n          status: status\n        });\n      } else {\n        path = formatUrl(path, query);\n\n        if (true) {\n          app.context.next({\n            path: path,\n            status: status\n          });\n        }\n\n        if (false) {}\n      }\n    };\n\n    if (true) {\n      app.context.beforeNuxtRender = fn => context.beforeRenderFns.push(fn);\n    }\n\n    if (false) {}\n  } // Dynamic keys\n\n\n  app.context.next = context.next;\n  app.context._redirected = false;\n  app.context._errored = false;\n  app.context.isHMR = !!context.isHMR;\n\n  if (context.route) {\n    app.context.route = await getRouteData(context.route);\n  }\n\n  app.context.params = app.context.route.params || {};\n  app.context.query = app.context.route.query || {};\n\n  if (context.from) {\n    app.context.from = await getRouteData(context.from);\n  }\n}\nfunction middlewareSeries(promises, appContext) {\n  if (!promises.length || appContext._redirected || appContext._errored) {\n    return Promise.resolve();\n  }\n\n  return promisify(promises[0], appContext).then(() => {\n    return middlewareSeries(promises.slice(1), appContext);\n  });\n}\nfunction promisify(fn, context) {\n  let promise;\n\n  if (fn.length === 2) {\n    // fn(context, callback)\n    promise = new Promise(resolve => {\n      fn(context, function (err, data) {\n        if (err) {\n          context.error(err);\n        }\n\n        data = data || {};\n        resolve(data);\n      });\n    });\n  } else {\n    promise = fn(context);\n  }\n\n  if (!promise || !(promise instanceof Promise) && typeof promise.then !== 'function') {\n    promise = Promise.resolve(promise);\n  }\n\n  return promise;\n} // Imported from vue-router\n\nfunction getLocation(base, mode) {\n  let path = window.location.pathname;\n\n  if (mode === 'hash') {\n    return window.location.hash.replace(/^#\\//, '');\n  }\n\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n\n  return decodeURI(path || '/') + window.location.search + window.location.hash;\n}\nfunction urlJoin() {\n  return Array.prototype.slice.call(arguments).join('/').replace(/\\/+/g, '/');\n} // Imported from path-to-regexp\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\n\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options));\n}\nfunction getQueryDiff(toQuery, fromQuery) {\n  const diff = {};\n  const queries = { ...toQuery,\n    ...fromQuery\n  };\n\n  for (const k in queries) {\n    if (String(toQuery[k]) !== String(fromQuery[k])) {\n      diff[k] = true;\n    }\n  }\n\n  return diff;\n}\nfunction normalizeError(err) {\n  let message;\n\n  if (!(err.message || typeof err === 'string')) {\n    try {\n      message = JSON.stringify(err, null, 2);\n    } catch (e) {\n      message = `[${err.constructor.name}]`;\n    }\n  } else {\n    message = err.message || err;\n  }\n\n  return {\n    message: message,\n    statusCode: err.statusCode || err.status || err.response && err.response.status || 500\n  };\n}\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\n\nconst PATH_REGEXP = new RegExp([// Match escaped characters that would otherwise appear in future matches.\n// This allows the user to escape special characters that won't transform.\n'(\\\\\\\\.)', // Match Express-style parameters and un-named parameters with a prefix\n// and optional suffixes. Matches appear as:\n//\n// \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n// \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n// \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n'([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'].join('|'), 'g');\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\n\nfunction parse(str, options) {\n  const tokens = [];\n  let key = 0;\n  let index = 0;\n  let path = '';\n  const defaultDelimiter = options && options.delimiter || '/';\n  let res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    const m = res[0];\n    const escaped = res[1];\n    const offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length; // Ignore already escaped sequences.\n\n    if (escaped) {\n      path += escaped[1];\n      continue;\n    }\n\n    const next = str[index];\n    const prefix = res[2];\n    const name = res[3];\n    const capture = res[4];\n    const group = res[5];\n    const modifier = res[6];\n    const asterisk = res[7]; // Push the current path onto the tokens.\n\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    const partial = prefix != null && next != null && next !== prefix;\n    const repeat = modifier === '+' || modifier === '*';\n    const optional = modifier === '?' || modifier === '*';\n    const delimiter = res[2] || defaultDelimiter;\n    const pattern = capture || group;\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'\n    });\n  } // Match any characters still remaining.\n\n\n  if (index < str.length) {\n    path += str.substr(index);\n  } // If the path exists, push it onto the end.\n\n\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens;\n}\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeURIComponentPretty(str) {\n  return encodeURI(str).replace(/[/?#]/g, c => {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeAsterisk(str) {\n  return encodeURI(str).replace(/[?#]/g, c => {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\n\n\nfunction tokensToFunction(tokens) {\n  // Compile all the tokens into regexps.\n  const matches = new Array(tokens.length); // Compile all the patterns before compilation.\n\n  for (let i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    let path = '';\n    const data = obj || {};\n    const options = opts || {};\n    const encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue;\n      }\n\n      const value = data[token.name || 'pathMatch'];\n      let segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue;\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined');\n        }\n      }\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`');\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue;\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty');\n          }\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`');\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue;\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"');\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path;\n  };\n}\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\n\n\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n}\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\n\n\nfunction escapeGroup(group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1');\n}\n/**\n * Format given url, append query to url query string\n *\n * @param  {string} url\n * @param  {string} query\n * @return {string}\n */\n\n\nfunction formatUrl(url, query) {\n  let protocol;\n  const index = url.indexOf('://');\n\n  if (index !== -1) {\n    protocol = url.substring(0, index);\n    url = url.substring(index + 3);\n  } else if (url.startsWith('//')) {\n    url = url.substring(2);\n  }\n\n  let parts = url.split('/');\n  let result = (protocol ? protocol + '://' : '//') + parts.shift();\n  let path = parts.filter(Boolean).join('/');\n  let hash;\n  parts = path.split('#');\n\n  if (parts.length === 2) {\n    path = parts[0];\n    hash = parts[1];\n  }\n\n  result += path ? '/' + path : '';\n\n  if (query && JSON.stringify(query) !== '{}') {\n    result += (url.split('?').length === 2 ? '&' : '?') + formatQuery(query);\n  }\n\n  result += hash ? '#' + hash : '';\n  return result;\n}\n/**\n * Transform data object to query string\n *\n * @param  {object} query\n * @return {string}\n */\n\n\nfunction formatQuery(query) {\n  return Object.keys(query).sort().map(key => {\n    const val = query[key];\n\n    if (val == null) {\n      return '';\n    }\n\n    if (Array.isArray(val)) {\n      return val.slice().map(val2 => [key, '=', val2].join('')).join('&');\n    }\n\n    return key + '=' + val;\n  }).filter(Boolean).join('&');\n}\n// EXTERNAL MODULE: external \"vue-meta\"\nvar external_vue_meta_ = __webpack_require__(11);\nvar external_vue_meta_default = /*#__PURE__*/__webpack_require__.n(external_vue_meta_);\n\n// EXTERNAL MODULE: external \"vue-router\"\nvar external_vue_router_ = __webpack_require__(6);\nvar external_vue_router_default = /*#__PURE__*/__webpack_require__.n(external_vue_router_);\n\n// CONCATENATED MODULE: ./.nuxt/router.js\n\n\n\n\nconst _4c1d3e70 = () => interopDefault(__webpack_require__.e(/* import() | pages/index */ 1).then(__webpack_require__.bind(null, 25)));\n\nexternal_vue_default.a.use(external_vue_router_default.a);\n\nif (false) {}\n\nconst scrollBehavior = function (to, from, savedPosition) {\n  // if the returned position is falsy or an empty object,\n  // will retain current scroll position.\n  let position = false; // if no children detected\n\n  if (to.matched.length < 2) {\n    // scroll to the top of the page\n    position = {\n      x: 0,\n      y: 0\n    };\n  } else if (to.matched.some(r => r.components.default.options.scrollToTop)) {\n    // if one of the children has scrollToTop option set to true\n    position = {\n      x: 0,\n      y: 0\n    };\n  } // savedPosition is only available for popstate navigations (back button)\n\n\n  if (savedPosition) {\n    position = savedPosition;\n  }\n\n  return new Promise(resolve => {\n    // wait for the out transition to complete (if necessary)\n    window.$nuxt.$once('triggerScroll', () => {\n      // coords will be used if no selector is provided,\n      // or if the selector didn't match any element.\n      if (to.hash) {\n        let hash = to.hash; // CSS.escape() is not supported with IE and Edge.\n\n        if (typeof window.CSS !== 'undefined' && typeof window.CSS.escape !== 'undefined') {\n          hash = '#' + window.CSS.escape(hash.substr(1));\n        }\n\n        try {\n          if (document.querySelector(hash)) {\n            // scroll to anchor by returning the selector\n            position = {\n              selector: hash\n            };\n          }\n        } catch (e) {\n          console.warn('Failed to save scroll position. Please add CSS.escape() polyfill (https://github.com/mathiasbynens/CSS.escape).');\n        }\n      }\n\n      resolve(position);\n    });\n  });\n};\n\nfunction createRouter() {\n  return new external_vue_router_default.a({\n    mode: 'history',\n    base: '/',\n    linkActiveClass: 'nuxt-link-active',\n    linkExactActiveClass: 'nuxt-link-exact-active',\n    scrollBehavior,\n    routes: [{\n      path: \"/\",\n      component: _4c1d3e70,\n      name: \"index\"\n    }],\n    fallback: false\n  });\n}\n// EXTERNAL MODULE: external \"vue-no-ssr\"\nvar external_vue_no_ssr_ = __webpack_require__(12);\nvar external_vue_no_ssr_default = /*#__PURE__*/__webpack_require__.n(external_vue_no_ssr_);\n\n// CONCATENATED MODULE: ./.nuxt/components/no-ssr.js\n/*\n** From https://github.com/egoist/vue-no-ssr\n** With the authorization of @egoist\n*/\n\n/* harmony default export */ var no_ssr = (external_vue_no_ssr_default.a);\n// CONCATENATED MODULE: ./.nuxt/components/nuxt-child.js\n/* harmony default export */ var nuxt_child = ({\n  name: 'nuxt-child',\n  functional: true,\n  props: {\n    nuxtChildKey: {\n      type: String,\n      default: ''\n    },\n    keepAlive: Boolean\n  },\n\n  render(h, {\n    parent,\n    data,\n    props\n  }) {\n    data.nuxtChild = true;\n    const _parent = parent;\n    const transitions = parent.$nuxt.nuxt.transitions;\n    const defaultTransition = parent.$nuxt.nuxt.defaultTransition;\n    let depth = 0;\n\n    while (parent) {\n      if (parent.$vnode && parent.$vnode.data.nuxtChild) {\n        depth++;\n      }\n\n      parent = parent.$parent;\n    }\n\n    data.nuxtChildDepth = depth;\n    const transition = transitions[depth] || defaultTransition;\n    const transitionProps = {};\n    transitionsKeys.forEach(key => {\n      if (typeof transition[key] !== 'undefined') {\n        transitionProps[key] = transition[key];\n      }\n    });\n    const listeners = {};\n    listenersKeys.forEach(key => {\n      if (typeof transition[key] === 'function') {\n        listeners[key] = transition[key].bind(_parent);\n      }\n    }); // Add triggerScroll event on beforeEnter (fix #1376)\n\n    const beforeEnter = listeners.beforeEnter;\n\n    listeners.beforeEnter = el => {\n      // Ensure to trigger scroll event after calling scrollBehavior\n      window.$nuxt.$nextTick(() => {\n        window.$nuxt.$emit('triggerScroll');\n      });\n      if (beforeEnter) return beforeEnter.call(_parent, el);\n    };\n\n    let routerView = [h('router-view', data)];\n\n    if (props.keepAlive) {\n      routerView = [h('keep-alive', {\n        props: props.keepAliveProps\n      }, routerView)];\n    }\n\n    return h('transition', {\n      props: transitionProps,\n      on: listeners\n    }, routerView);\n  }\n\n});\nconst transitionsKeys = ['name', 'mode', 'appear', 'css', 'type', 'duration', 'enterClass', 'leaveClass', 'appearClass', 'enterActiveClass', 'enterActiveClass', 'leaveActiveClass', 'appearActiveClass', 'enterToClass', 'leaveToClass', 'appearToClass'];\nconst listenersKeys = ['beforeEnter', 'enter', 'afterEnter', 'enterCancelled', 'beforeLeave', 'leave', 'afterLeave', 'leaveCancelled', 'beforeAppear', 'appear', 'afterAppear', 'appearCancelled'];\n// CONCATENATED MODULE: ./.nuxt/components/nuxt-link.js\n/* harmony default export */ var nuxt_link = ({\n  name: 'nuxt-link',\n  functional: true,\n\n  render(h, {\n    data,\n    children\n  }) {\n    return h('router-link', data, children);\n  }\n\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./client/layouts/error.vue?vue&type=template&id=0270cf75&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container individual-project\"},[_vm._ssrNode(((_vm.error.statusCode === 404)?(\"<h1>404 - Page not found</h1>\"):(\"<h1>An error occurred</h1>\"))+\" \"),_c('nuxt-link',{attrs:{\"to\":\"/\"}},[_vm._v(\"Home page\")])],2)}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./client/layouts/error.vue?vue&type=template&id=0270cf75&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib??vue-loader-options!./client/layouts/error.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n/* harmony default export */ var errorvue_type_script_lang_js_ = ({\n  props: ['error'],\n  layout: 'default' // you can set a custom layout for the error page\n\n});\n// CONCATENATED MODULE: ./client/layouts/error.vue?vue&type=script&lang=js&\n /* harmony default export */ var layouts_errorvue_type_script_lang_js_ = (errorvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./client/layouts/error.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer[\"a\" /* default */])(\n  layouts_errorvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  \"5414a62f\"\n  \n)\n\ncomponent.options.__file = \"error.vue\"\n/* harmony default export */ var layouts_error = (component.exports);\n// CONCATENATED MODULE: ./.nuxt/components/nuxt.js\n\n\n\n\n/* harmony default export */ var components_nuxt = ({\n  name: 'nuxt',\n  props: {\n    nuxtChildKey: String,\n    keepAlive: Boolean\n  },\n\n  render(h) {\n    // If there is some error\n    if (this.nuxt.err) {\n      return h('nuxt-error', {\n        props: {\n          error: this.nuxt.err\n        }\n      });\n    } // Directly return nuxt child\n\n\n    return h('nuxt-child', {\n      key: this.routerViewKey,\n      props: this.$props\n    });\n  },\n\n  beforeCreate() {\n    external_vue_default.a.util.defineReactive(this, 'nuxt', this.$root.$options.nuxt);\n  },\n\n  computed: {\n    routerViewKey() {\n      // If nuxtChildKey prop is given or current route has children\n      if (typeof this.nuxtChildKey !== 'undefined' || this.$route.matched.length > 1) {\n        return this.nuxtChildKey || compile(this.$route.matched[0].path)(this.$route.params);\n      }\n\n      const Component = this.$route.matched[0] && this.$route.matched[0].components.default;\n\n      if (Component && Component.options && Component.options.key) {\n        return typeof Component.options.key === 'function' ? Component.options.key(this.$route) : Component.options.key;\n      }\n\n      return this.$route.path;\n    }\n\n  },\n  components: {\n    NuxtChild: nuxt_child,\n    NuxtError: layouts_error\n  }\n});\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib??ref--2-0!./node_modules/vue-loader/lib??vue-loader-options!./.nuxt/components/nuxt-loading.vue?vue&type=script&lang=js&\n/* harmony default export */ var nuxt_loadingvue_type_script_lang_js_ = ({\n  name: 'nuxt-loading',\n\n  data() {\n    return {\n      percent: 0,\n      show: false,\n      canSucceed: true,\n      reversed: false,\n      skipTimerCount: 0,\n      rtl: false,\n      throttle: 200,\n      duration: 5000,\n      continuous: false\n    };\n  },\n\n  computed: {\n    left() {\n      if (!this.continuous && !this.rtl) {\n        return false;\n      }\n\n      return this.rtl ? this.reversed ? '0px' : 'auto' : !this.reversed ? '0px' : 'auto';\n    }\n\n  },\n\n  beforeDestroy() {\n    this.clear();\n  },\n\n  methods: {\n    clear() {\n      clearInterval(this._timer);\n      clearTimeout(this._throttle);\n      this._timer = null;\n    },\n\n    start() {\n      this.clear();\n      this.percent = 0;\n      this.reversed = false;\n      this.skipTimerCount = 0;\n      this.canSucceed = true;\n\n      if (this.throttle) {\n        this._throttle = setTimeout(() => this.startTimer(), this.throttle);\n      } else {\n        this.startTimer();\n      }\n\n      return this;\n    },\n\n    set(num) {\n      this.show = true;\n      this.canSucceed = true;\n      this.percent = Math.min(100, Math.max(0, Math.floor(num)));\n      return this;\n    },\n\n    get() {\n      return this.percent;\n    },\n\n    increase(num) {\n      this.percent = Math.min(100, Math.floor(this.percent + num));\n      return this;\n    },\n\n    decrease(num) {\n      this.percent = Math.max(0, Math.floor(this.percent - num));\n      return this;\n    },\n\n    pause() {\n      clearInterval(this._timer);\n      return this;\n    },\n\n    resume() {\n      this.startTimer();\n      return this;\n    },\n\n    finish() {\n      this.percent = this.reversed ? 0 : 100;\n      this.hide();\n      return this;\n    },\n\n    hide() {\n      this.clear();\n      setTimeout(() => {\n        this.show = false;\n        this.$nextTick(() => {\n          this.percent = 0;\n          this.reversed = false;\n        });\n      }, 500);\n      return this;\n    },\n\n    fail() {\n      this.canSucceed = false;\n      return this;\n    },\n\n    startTimer() {\n      if (!this.show) {\n        this.show = true;\n      }\n\n      if (typeof this._cut === 'undefined') {\n        this._cut = 10000 / Math.floor(this.duration);\n      }\n\n      this._timer = setInterval(() => {\n        /**\n         * When reversing direction skip one timers\n         * so 0, 100 are displayed for two iterations\n         * also disable css width transitioning\n         * which otherwise interferes and shows\n         * a jojo effect\n         */\n        if (this.skipTimerCount > 0) {\n          this.skipTimerCount--;\n          return;\n        }\n\n        if (this.reversed) {\n          this.decrease(this._cut);\n        } else {\n          this.increase(this._cut);\n        }\n\n        if (this.continuous) {\n          if (this.percent >= 100) {\n            this.skipTimerCount = 1;\n            this.reversed = !this.reversed;\n          } else if (this.percent <= 0) {\n            this.skipTimerCount = 1;\n            this.reversed = !this.reversed;\n          }\n        }\n      }, 100);\n    }\n\n  },\n\n  render(h) {\n    let el = h(false);\n\n    if (this.show) {\n      el = h('div', {\n        staticClass: 'nuxt-progress',\n        class: {\n          'nuxt-progress-notransition': this.skipTimerCount > 0,\n          'nuxt-progress-failed': !this.canSucceed\n        },\n        style: {\n          'width': this.percent + '%',\n          'left': this.left\n        }\n      });\n    }\n\n    return el;\n  }\n\n});\n// CONCATENATED MODULE: ./.nuxt/components/nuxt-loading.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_nuxt_loadingvue_type_script_lang_js_ = (nuxt_loadingvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./.nuxt/components/nuxt-loading.vue\nvar nuxt_loading_render, nuxt_loading_staticRenderFns\n\n\nfunction injectStyles (context) {\n  \n  var style0 = __webpack_require__(16)\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\n\nvar nuxt_loading_component = Object(componentNormalizer[\"a\" /* default */])(\n  components_nuxt_loadingvue_type_script_lang_js_,\n  nuxt_loading_render,\n  nuxt_loading_staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  \"21f6784c\"\n  \n)\n\nnuxt_loading_component.options.__file = \"nuxt-loading.vue\"\n/* harmony default export */ var nuxt_loading = (nuxt_loading_component.exports);\n// EXTERNAL MODULE: ./client/layouts/default.vue\nvar layouts_default = __webpack_require__(13);\n\n// CONCATENATED MODULE: ./.nuxt/App.js\n\n\n\nconst layouts = {\n  \"_default\": layouts_default[\"default\"]\n};\n/* harmony default export */ var App = ({\n  head: {\n    \"title\": \"PWAnderson.com - Full Stack Developer - Berlin\",\n    \"meta\": [{\n      \"charset\": \"utf-8\"\n    }, {\n      \"name\": \"viewport\",\n      \"content\": \"width=device-width, initial-scale=1\"\n    }, {\n      \"hid\": \"description\",\n      \"name\": \"description\",\n      \"content\": \"PWAnderson.com - Full Stack Developer - Berlin\"\n    }, {\n      \"hid\": \"og:image\",\n      \"property\": \"og:image\",\n      \"content\": \"https:\\u002F\\u002Fs3.amazonaws.com\\u002Fpwanderson\\u002Fpwanderson.PNG\"\n    }],\n    \"link\": [{\n      \"rel\": \"apple-touch-icon\",\n      \"sizes\": \"180x180\",\n      \"href\": \"https:\\u002F\\u002Fs3.amazonaws.com\\u002Fpwanderson\\u002Fapple-touch-icon.png\"\n    }, {\n      \"rel\": \"icon\",\n      \"type\": \"image\\u002Fpng\",\n      \"sizes\": \"32x32\",\n      \"href\": \"https:\\u002F\\u002Fs3.amazonaws.com\\u002Fpwanderson\\u002Ffavicon-32x32.png\"\n    }, {\n      \"rel\": \"icon\",\n      \"type\": \"image\\u002Fpng\",\n      \"sizes\": \"16x16\",\n      \"href\": \"https:\\u002F\\u002Fs3.amazonaws.com\\u002Fpwanderson\\u002Ffavicon-16x16.png\"\n    }, {\n      \"rel\": \"icon\",\n      \"type\": \"image\\u002Fx-icon\",\n      \"href\": \"https:\\u002F\\u002Fs3.amazonaws.com\\u002Fpwanderson\\u002Ffavicon.ico\"\n    }, {\n      \"rel\": \"stylesheet\",\n      \"href\": \"https:\\u002F\\u002Fuse.fontawesome.com\\u002Freleases\\u002Fv5.6.3\\u002Fcss\\u002Fall.css\"\n    }],\n    \"style\": [],\n    \"script\": []\n  },\n\n  render(h, props) {\n    const loadingEl = h('nuxt-loading', {\n      ref: 'loading'\n    });\n    const layoutEl = h(this.layout || 'nuxt');\n    const templateEl = h('div', {\n      domProps: {\n        id: '__layout'\n      },\n      key: this.layoutName\n    }, [layoutEl]);\n    const transitionEl = h('transition', {\n      props: {\n        name: 'layout',\n        mode: 'out-in'\n      },\n      on: {\n        beforeEnter(el) {\n          // Ensure to trigger scroll event after calling scrollBehavior\n          window.$nuxt.$nextTick(() => {\n            window.$nuxt.$emit('triggerScroll');\n          });\n        }\n\n      }\n    }, [templateEl]);\n    return h('div', {\n      domProps: {\n        id: '__nuxt'\n      }\n    }, [loadingEl, transitionEl]);\n  },\n\n  data: () => ({\n    layout: null,\n    layoutName: ''\n  }),\n\n  beforeCreate() {\n    external_vue_default.a.util.defineReactive(this, 'nuxt', this.$options.nuxt);\n  },\n\n  created() {\n    // Add this.$nuxt in child instances\n    external_vue_default.a.prototype.$nuxt = this; // add to window so we can listen when ready\n\n    if (typeof window !== 'undefined') {\n      window.$nuxt = this;\n    } // Add $nuxt.error()\n\n\n    this.error = this.nuxt.error;\n  },\n\n  mounted() {\n    this.$loading = this.$refs.loading;\n  },\n\n  watch: {\n    'nuxt.err': 'errorChanged'\n  },\n  methods: {\n    errorChanged() {\n      if (this.nuxt.err && this.$loading) {\n        if (this.$loading.fail) this.$loading.fail();\n        if (this.$loading.finish) this.$loading.finish();\n      }\n    },\n\n    setLayout(layout) {\n      if (!layout || !layouts['_' + layout]) {\n        layout = 'default';\n      }\n\n      this.layoutName = layout;\n      this.layout = layouts['_' + layout];\n      return this.layout;\n    },\n\n    loadLayout(layout) {\n      if (!layout || !layouts['_' + layout]) {\n        layout = 'default';\n      }\n\n      return Promise.resolve(layouts['_' + layout]);\n    }\n\n  },\n  components: {\n    NuxtLoading: nuxt_loading\n  }\n});\n// CONCATENATED MODULE: ./.nuxt/index.js\n\n\n\n\n\n\n\n\n\n\n/* Plugins */\n// Component: <no-ssr>\n\nexternal_vue_default.a.component(no_ssr.name, no_ssr); // Component: <nuxt-child>\n\nexternal_vue_default.a.component(nuxt_child.name, nuxt_child); // Component: <nuxt-link>\n\nexternal_vue_default.a.component(nuxt_link.name, nuxt_link); // Component: <nuxt>`\n\nexternal_vue_default.a.component(components_nuxt.name, components_nuxt); // vue-meta configuration\n\nexternal_vue_default.a.use(external_vue_meta_default.a, {\n  keyName: 'head',\n  // the component option name that vue-meta looks for meta info on.\n  attribute: 'data-n-head',\n  // the attribute name vue-meta adds to the tags it observes\n  ssrAttribute: 'data-n-head-ssr',\n  // the attribute name that lets vue-meta know that meta info has already been server-rendered\n  tagIDKeyName: 'hid' // the property name that vue-meta uses to determine whether to overwrite or append a tag\n\n});\nconst defaultTransition = {\n  \"name\": \"page\",\n  \"mode\": \"out-in\",\n  \"appear\": false,\n  \"appearClass\": \"appear\",\n  \"appearActiveClass\": \"appear-active\",\n  \"appearToClass\": \"appear-to\"\n};\n\nasync function createApp(ssrContext) {\n  const router = await createRouter(ssrContext); // Create Root instance\n  // here we inject the router and store to all child components,\n  // making them available everywhere as `this.$router` and `this.$store`.\n\n  const app = {\n    router,\n    nuxt: {\n      defaultTransition,\n      transitions: [defaultTransition],\n\n      setTransitions(transitions) {\n        if (!Array.isArray(transitions)) {\n          transitions = [transitions];\n        }\n\n        transitions = transitions.map(transition => {\n          if (!transition) {\n            transition = defaultTransition;\n          } else if (typeof transition === 'string') {\n            transition = Object.assign({}, defaultTransition, {\n              name: transition\n            });\n          } else {\n            transition = Object.assign({}, defaultTransition, transition);\n          }\n\n          return transition;\n        });\n        this.$options.nuxt.transitions = transitions;\n        return transitions;\n      },\n\n      err: null,\n      dateErr: null,\n\n      error(err) {\n        err = err || null;\n        app.context._errored = !!err;\n        err = err ? normalizeError(err) : null;\n        const nuxt = this.nuxt || this.$options.nuxt;\n        nuxt.dateErr = Date.now();\n        nuxt.err = err; // Used in src/server.js\n\n        if (ssrContext) ssrContext.nuxt.error = err;\n        return err;\n      }\n\n    },\n    ...App\n  };\n  const next = ssrContext ? ssrContext.next : location => app.router.push(location); // Resolve route\n\n  let route;\n\n  if (ssrContext) {\n    route = router.resolve(ssrContext.url).route;\n  } else {\n    const path = getLocation(router.options.base);\n    route = router.resolve(path).route;\n  } // Set context to app.context\n\n\n  await setContext(app, {\n    route,\n    next,\n    error: app.nuxt.error.bind(app),\n    payload: ssrContext ? ssrContext.payload : undefined,\n    req: ssrContext ? ssrContext.req : undefined,\n    res: ssrContext ? ssrContext.res : undefined,\n    beforeRenderFns: ssrContext ? ssrContext.beforeRenderFns : undefined\n  }); // Plugin execution\n  // If server-side, wait for async component to be resolved first\n\n  if ( true && ssrContext && ssrContext.url) {\n    await new Promise((resolve, reject) => {\n      router.push(ssrContext.url, resolve, () => {\n        // navigated to a different route in router guard\n        const unregister = router.afterEach(async (to, from, next) => {\n          ssrContext.url = to.fullPath;\n          app.context.route = await getRouteData(to);\n          app.context.params = to.params || {};\n          app.context.query = to.query || {};\n          unregister();\n          resolve();\n        });\n      });\n    });\n  }\n\n  return {\n    app,\n    router\n  };\n}\n\n\n// CONCATENATED MODULE: ./.nuxt/server.js\n\n\n\n\n\n\n\nconst debug = __webpack_require__(20)('nuxt:render');\n\ndebug.color = 4; // force blue color\n\nconst isDev = false;\n\nconst noopApp = () => new external_vue_default.a({\n  render: h => h('div')\n});\n\nconst createNext = ssrContext => opts => {\n  ssrContext.redirected = opts; // If nuxt generate\n\n  if (!ssrContext.res) {\n    ssrContext.nuxt.serverRendered = false;\n    return;\n  }\n\n  opts.query = Object(external_querystring_[\"stringify\"])(opts.query);\n  opts.path = opts.path + (opts.query ? '?' + opts.query : '');\n  const routerBase = '/';\n\n  if (!opts.path.startsWith('http') && routerBase !== '/' && !opts.path.startsWith(routerBase)) {\n    opts.path = urlJoin(routerBase, opts.path);\n  } // Avoid loop redirect\n\n\n  if (opts.path === ssrContext.url) {\n    ssrContext.redirected = false;\n    return;\n  }\n\n  ssrContext.res.writeHead(opts.status, {\n    'Location': opts.path\n  });\n  ssrContext.res.end();\n}; // This exported function will be called by `bundleRenderer`.\n// This is where we perform data-prefetching to determine the\n// state of our application before actually rendering it.\n// Since data fetching is async, this function is expected to\n// return a Promise that resolves to the app instance.\n\n\n/* harmony default export */ var server = __webpack_exports__[\"default\"] = (async ssrContext => {\n  // Create ssrContext.next for simulate next() of beforeEach() when wanted to redirect\n  ssrContext.redirected = false;\n  ssrContext.next = createNext(ssrContext); // Used for beforeNuxtRender({ Components, nuxtState })\n\n  ssrContext.beforeRenderFns = []; // Nuxt object (window{{globals.context}}, defaults to window.__NUXT__)\n\n  ssrContext.nuxt = {\n    layout: 'default',\n    data: [],\n    error: null,\n    serverRendered: true // Create the app definition and the instance (created for each request)\n\n  };\n  const {\n    app,\n    router\n  } = await createApp(ssrContext);\n\n  const _app = new external_vue_default.a(app); // Add meta infos (used in renderer.js)\n\n\n  ssrContext.meta = _app.$meta(); // Keep asyncData for each matched component in ssrContext (used in app/utils.js via this.$ssrContext)\n\n  ssrContext.asyncData = {};\n\n  const beforeRender = async () => {\n    // Call beforeNuxtRender() methods\n    await Promise.all(ssrContext.beforeRenderFns.map(fn => promisify(fn, {\n      Components,\n      nuxtState: ssrContext.nuxt\n    })));\n  };\n\n  const renderErrorPage = async () => {\n    // Load layout for error page\n    const errLayout = typeof layouts_error.layout === 'function' ? layouts_error.layout(app.context) : layouts_error.layout;\n    ssrContext.nuxt.layout = errLayout || 'default';\n    await _app.loadLayout(errLayout);\n\n    _app.setLayout(errLayout);\n\n    await beforeRender();\n    return _app;\n  };\n\n  const render404Page = () => {\n    app.context.error({\n      statusCode: 404,\n      path: ssrContext.url,\n      message: `This page could not be found`\n    });\n    return renderErrorPage();\n  }; // Components are already resolved by setContext -> getRouteData (app/utils.js)\n\n\n  const Components = getMatchedComponents(router.match(ssrContext.url));\n  /*\n  ** Call global middleware (nuxt.config.js)\n  */\n\n  let midd = [];\n  midd = midd.map(name => {\n    if (typeof name === 'function') return name;\n\n    if (typeof middleware[name] !== 'function') {\n      app.context.error({\n        statusCode: 500,\n        message: 'Unknown middleware ' + name\n      });\n    }\n\n    return middleware[name];\n  });\n  await middlewareSeries(midd, app.context); // ...If there is a redirect or an error, stop the process\n\n  if (ssrContext.redirected) return noopApp();\n  if (ssrContext.nuxt.error) return renderErrorPage();\n  /*\n  ** Set layout\n  */\n\n  let layout = Components.length ? Components[0].options.layout : layouts_error.layout;\n  if (typeof layout === 'function') layout = layout(app.context);\n  await _app.loadLayout(layout);\n  if (ssrContext.nuxt.error) return renderErrorPage();\n  layout = _app.setLayout(layout);\n  ssrContext.nuxt.layout = _app.layoutName;\n  /*\n  ** Call middleware (layout + pages)\n  */\n\n  midd = [];\n  if (layout.middleware) midd = midd.concat(layout.middleware);\n  Components.forEach(Component => {\n    if (Component.options.middleware) {\n      midd = midd.concat(Component.options.middleware);\n    }\n  });\n  midd = midd.map(name => {\n    if (typeof name === 'function') return name;\n\n    if (typeof middleware[name] !== 'function') {\n      app.context.error({\n        statusCode: 500,\n        message: 'Unknown middleware ' + name\n      });\n    }\n\n    return middleware[name];\n  });\n  await middlewareSeries(midd, app.context); // ...If there is a redirect or an error, stop the process\n\n  if (ssrContext.redirected) return noopApp();\n  if (ssrContext.nuxt.error) return renderErrorPage();\n  /*\n  ** Call .validate()\n  */\n\n  let isValid = true;\n\n  try {\n    for (const Component of Components) {\n      if (typeof Component.options.validate !== 'function') {\n        continue;\n      }\n\n      isValid = await Component.options.validate(app.context);\n\n      if (!isValid) {\n        break;\n      }\n    }\n  } catch (validationError) {\n    // ...If .validate() threw an error\n    app.context.error({\n      statusCode: validationError.statusCode || '500',\n      message: validationError.message\n    });\n    return renderErrorPage();\n  } // ...If .validate() returned false\n\n\n  if (!isValid) {\n    // Don't server-render the page in generate mode\n    if (ssrContext._generate) ssrContext.nuxt.serverRendered = false; // Render a 404 error page\n\n    return render404Page();\n  } // If no Components found, returns 404\n\n\n  if (!Components.length) return render404Page(); // Call asyncData & fetch hooks on components matched by the route.\n\n  const asyncDatas = await Promise.all(Components.map(Component => {\n    const promises = []; // Call asyncData(context)\n\n    if (Component.options.asyncData && typeof Component.options.asyncData === 'function') {\n      const promise = promisify(Component.options.asyncData, app.context);\n      promise.then(asyncDataResult => {\n        ssrContext.asyncData[Component.cid] = asyncDataResult;\n        applyAsyncData(Component);\n        return asyncDataResult;\n      });\n      promises.push(promise);\n    } else {\n      promises.push(null);\n    } // Call fetch(context)\n\n\n    if (Component.options.fetch) {\n      promises.push(Component.options.fetch(app.context));\n    } else {\n      promises.push(null);\n    }\n\n    return Promise.all(promises);\n  })); // datas are the first row of each\n\n  ssrContext.nuxt.data = asyncDatas.map(r => r[0] || {}); // ...If there is a redirect or an error, stop the process\n\n  if (ssrContext.redirected) return noopApp();\n  if (ssrContext.nuxt.error) return renderErrorPage(); // Call beforeNuxtRender methods & add store state\n\n  await beforeRender();\n  return _app;\n});\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
  },
  "maps": {}
}